# This workflow will build a Swift project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-swift

name: Swift

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  unit-tests:

    runs-on: ubuntu-latest
    container: swift:6.0-noble

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: vapor_database        
          POSTGRES_PASSWORD: vapor_password
          POSTGRES_USER: vapor_username
        ports:
          - 5433:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install zstd
      run: |
        apt-get update -y
        apt-get install -y zstd

    - name: Restore .build
      id: "restore-build"
      uses: actions/cache/restore@v4
      with:
        path: .build
        key: "swiftpm-tests-build-${{ runner.os }}-${{ github.event.pull_request.base.sha || github.event.after }}"
        restore-keys: "swiftpm-tests-build-${{ runner.os }}-"
        
    - name: Run unit tests
      run: swift test
      
    - name: Cache .build
      if: steps.restore-build.outputs.cache-hit != 'true'
      uses: actions/cache/save@v4
      with:
        path: .build
        key: "swiftpm-tests-build-${{ runner.os }}-${{ github.event.pull_request.base.sha || github.event.after }}"
